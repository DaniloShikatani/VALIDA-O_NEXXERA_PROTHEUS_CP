import streamlit as st
import pandas as pd
import io

# --- 1. CONFIGURA√á√ÉO DA P√ÅGINA ---
st.set_page_config(page_title="Concilia√ß√£o de Pagamentos", layout="wide")
st.title("ü§ñ Conciliador de T√≠tulos: Tesouraria vs. VAN Banc√°ria")
st.markdown("Fa√ßa o upload dos relat√≥rios da Tesouraria e da Nexxera (em formato Excel) para verificar os pagamentos processados.")

# --- 2. FUN√á√ïES DE AJUDA (N√£o precisamos mais da limpeza de valor aqui) ---
@st.cache_data
def converter_df_para_csv(df):
    """Converte um DataFrame para CSV em mem√≥ria, pronto para download."""
    return df.to_csv(index=False, sep=';', encoding='utf-8-sig', decimal=',').encode('utf-8')


# --- 3. UPLOAD DOS ARQUIVOS ---
st.header("üì§ 1. Fa√ßa o Upload dos Relat√≥rios")
col1, col2 = st.columns(2)

with col1:
    arquivo_tesouraria = st.file_uploader("Relat√≥rio da Tesouraria (.xlsx)", type=["xlsx"])

with col2:
    arquivo_nexxera = st.file_uploader("Relat√≥rio da VAN (Nexxera) (.xlsx)", type=["xlsx"])


# --- 4. L√ìGICA DE PROCESSAMENTO E CONCILIA√á√ÉO ---
if arquivo_tesouraria and arquivo_nexxera:
    st.header("‚ñ∂Ô∏è 2. Inicie a Concilia√ß√£o")
    if st.button("Conciliar Relat√≥rios"):
        with st.spinner("M√°gica acontecendo... Lendo, padronizando e cruzando os dados..."):
            
            try:
                # --- Leitura dos Arquivos ---
                df_tesouraria = pd.read_excel(arquivo_tesouraria)
                
                cabecalho_nexxera = [
                    'Status', 'Nome Favorecido/Contribuinte', 'Inscri√ß√£o', 'Banco', 'Ag√™ncia', 'Conta', 
                    'DAC', 'Opera√ß√£o', 'Seu N√∫mero', 'Data Vencimento', 'Data Pagamento', 'Valor', 'Lan√ßamento', 
                    'Banco_2', 'Ag√™ncia_2', 'Conta_2', 'DAC_2', 'Nosso N√∫mero', 'C√≥digo de Barras', 
                    'Data/Hora de Gera√ß√£o', 'Ocorr√™ncia 1', 'Ocorr√™ncia 2', 'Ocorr√™ncia 3', 'Ocorr√™ncia 4', 
                    'Ocorr√™ncia 5', 'Autentica√ß√£o Banc√°ria', 'Autentica√ß√£o Legislativa', 'Observa√ß√£o', 
                    'Per√≠odo de Apura√ß√£o', 'Compet√™ncia', 'C√≥digo da Receita', 'UF', 'Placa', 'Autorizadores', 
                    'N√∫mero NSA Retorno', 'Autoriza√ß√£o 1', 'Autoriza√ß√£o 2', 'Autoriza√ß√£o 3', 'Autoriza√ß√£o 4', 
                    'Autoriza√ß√£o 5', 'Finalidade / Compl. do Tipo de Servi√ßo', 'Tipo Chave Pix', 'Chave Pix'
                ]
                df_nexxera = pd.read_excel(arquivo_nexxera, header=None, names=cabecalho_nexxera)
            except Exception as e:
                st.error(f"Erro ao ler um dos arquivos Excel. Verifique se eles n√£o est√£o corrompidos. Erro: {e}")
                st.stop()

            # --- CORRE√á√ÉO PRINCIPAL: Padroniza√ß√£o das Chaves ---
            
            # Padroniza a chave da Tesouraria (converte para texto e remove espa√ßos)
            if 'Id. Cnab' in df_tesouraria.columns:
                df_tesouraria['Id. Cnab'] = df_tesouraria['Id. Cnab'].astype(str).str.strip()
            else:
                st.error("ERRO: A coluna 'Id. Cnab' n√£o foi encontrada no Relat√≥rio da Tesouraria.")
                st.stop()

            # Padroniza a chave da Nexxera
            if 'Seu N√∫mero' in df_nexxera.columns:
                df_nexxera['Seu N√∫mero'] = df_nexxera['Seu N√∫mero'].astype(str).str.strip()
                df_nexxera['StatusVAN'] = 'Processado na VAN' # Adiciona uma flag para o merge
            else:
                st.error("ERRO: A coluna 'Seu N√∫mero' n√£o foi encontrada no Relat√≥rio da Nexxera.")
                st.stop()
            # --- FIM DA CORRE√á√ÉO ---
            
            st.success("Arquivos lidos e chaves padronizadas com sucesso!")

            # --- A Concilia√ß√£o (Merge) com a nova l√≥gica ---
            # Otimiza√ß√£o: Usamos apenas as colunas necess√°rias da Nexxera para o merge
            df_nexxera_para_merge = df_nexxera[['Seu N√∫mero', 'StatusVAN']].drop_duplicates()

            df_resultado = pd.merge(
                df_tesouraria,
                df_nexxera_para_merge,
                left_on='Id. Cnab',     # Chave da tabela da esquerda (Tesouraria)
                right_on='Seu N√∫mero',  # Chave da tabela da direita (Nexxera)
                how='left'              # Mant√©m todos os registros da Tesouraria
            )
            
            # Separa os resultados
            df_conciliados = df_resultado[df_resultado['StatusVAN'].notna()]
            df_nao_encontrados = df_resultado[df_resultado['StatusVAN'].isna()]
            
            # Salva os resultados na mem√≥ria do app
            st.session_state['df_conciliados'] = df_conciliados
            st.session_state['df_nao_encontrados'] = df_nao_encontrados
            
        st.balloons()
        st.success("Concilia√ß√£o conclu√≠da!")


# --- 5. EXIBI√á√ÉO DOS RESULTADOS ---
if 'df_conciliados' in st.session_state:
    st.header("üìä 3. Resultados da Concilia√ß√£o")
    
    df_conciliados = st.session_state['df_conciliados']
    df_nao_encontrados = st.session_state['df_nao_encontrados']
    total_tesouraria = len(df_conciliados) + len(df_nao_encontrados)
    
    st.subheader("Resumo Geral")
    kpi1, kpi2, kpi3 = st.columns(3)
    kpi1.metric("T√≠tulos na Tesouraria", value=f"{total_tesouraria}")
    kpi2.metric("‚úÖ Conciliados na VAN", value=f"{len(df_conciliados)}")
    kpi3.metric("‚ùå N√£o Encontrados na VAN", value=f"{len(df_nao_encontrados)}")
    
    tab_conciliados, tab_nao_encontrados = st.tabs(["‚úÖ T√≠tulos Conciliados", "‚ùå T√≠tulos N√£o Encontrados"])
    
    with tab_conciliados:
        st.write(f"Encontrados {len(df_conciliados)} t√≠tulos correspondentes no relat√≥rio da VAN.")
        st.dataframe(df_conciliados)
        st.download_button("üì• Baixar Lista de Conciliados (CSV)", converter_df_para_csv(df_conciliados), "conciliados.csv", "text/csv")
        
    with tab_nao_encontrados:
        st.write(f"Estes {len(df_nao_encontrados)} t√≠tulos da Tesouraria n√£o foram encontrados no relat√≥rio da VAN.")
        st.dataframe(df_nao_encontrados)
        st.download_button("üì• Baixar Lista de Pendentes (CSV)", converter_df_para_csv(df_nao_encontrados), "pendentes_conciliacao.csv", "text/csv")
